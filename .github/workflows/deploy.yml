name: Build and Deploy to GKE

on:
  pull_request:
    branches: ["master"]
env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }} # TODO: update Google Cloud project id
  GAR_LOCATION: ${{ secrets.GAR_LOCATION }} # TODO: update Artifact Registry location
  SERVICE: ${{ secrets.SERVICE_NAME }} # TODO: update Cloud Run service name
  REGION: ${{ secrets.SERVICE_REGION }} # TODO: update Cloud Run service region
  APP_NAME: ${{ secrets.APP_NAME }}
  GKE_CLUSTER_NAME: ${{ secrets.GKE_CLUSTER_NAME }}
  CLUSTER_REGION: ${{ secrets.CLUSTER_REGION }}

jobs:
  deploy:
    # if: ${{ github.event.pull_request.merged }} #! only merged to master
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: "read"
      id-token: "write"

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Google Auth
        id: auth
        uses: "google-github-actions/auth@v0"
        with:
          token_format: "access_token"
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"

      - name: Docker Auth
        id: docker-auth
        uses: "docker/login-action@v1"
        with:
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"
          registry: "${{ env.GAR_LOCATION }}-docker.pkg.dev"

      - name: Build and Push Container
        run: |-
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.APP_NAME }}/${{ env.SERVICE }}:${{ github.sha }}" . -f deploy/Dockerfile
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.APP_NAME }}/${{ env.SERVICE }}:${{ github.sha }}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"
        with:
          version: ">= 363.0.0"

      - name: "cluster list"
        run: "gcloud container clusters list"

      - name: Deploy to GKE

        run: |-
          IMG=${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.APP_NAME }}/${{ env.SERVICE }}
          TAG=${{ github.sha }}
          gcloud container clusters get-credentials ${{ env.GKE_CLUSTER_NAME }} --region ${{ env.CLUSTER_REGION }}
          # helm repo update
          kubectl get all
          echo $PWD
          helm upgrade --install backend ./deploy/backend \
          --namespace services \
          --set=global.appVersion="${{ github.sha }}" \
          --set=global.image.repository="$IMG" \
          --create-namespace
